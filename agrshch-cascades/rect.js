class Rect{constructor(i,t,h,s){0==arguments.length?(this.w=width,this.h=height,this.x=0,this.y=0):(this.x=i,this.y=t,this.w=h,this.h=s),this.kid1,this.kid2,this.parent=!1,this.divVert=!1,this.divHor=!1,this.divider,this.noiseOff=100*fxrand(),this.chance=.3+.2*fxrand(),this.level=0,this.corner=1e3*floor(2*fxrand())}subdivide(){this.level>=DEEPNESS||(fxrand()<this.chance?this.subdivideHor():this.subdivideVert(),this.parent&&(this.kid1.subdivide(),this.kid2.subdivide()))}subdivideHor(){this.divider=noise(this.noiseOff);let i=this.h*this.divider;this.kid1=new Rect(this.x,this.y,this.w,i),this.kid2=new Rect(this.x,this.y+i,this.w,this.h-i);let t=this.level+1;this.kid1.level=t,this.kid2.level=t,this.parent=!0,this.divHor=!0}subdivideVert(){this.divider=noise(this.noiseOff);let i=this.w*this.divider;this.kid1=new Rect(this.x,this.y,i,this.h),this.kid2=new Rect(this.x+i,this.y,this.w-i,this.h);let t=this.level+1;this.kid1.level=t,this.kid2.level=t,this.parent=!0,this.divVert=!0}draw(){this.parent?(this.kid1.draw(),this.kid2.draw()):(noStroke(),shader(myShader),rect(this.x,this.y,this.w,this.h))}moveKids(){if(this.parent){if(this.noiseOff+=5e-4,this.divider=constrain(noise(this.noiseOff),.1,.9),this.divVert){let i=this.w*this.divider;this.kid1.x=this.x,this.kid1.y=this.y,this.kid1.w=i,this.kid1.h=this.h,this.kid2.x=this.x+i,this.kid2.y=this.y,this.kid2.w=this.w-i,this.kid2.h=this.h}if(this.divHor){let i=this.h*this.divider;this.kid1.x=this.x,this.kid1.y=this.y,this.kid1.w=this.w,this.kid1.h=i,this.kid2.x=this.x,this.kid2.y=this.y+i,this.kid2.w=this.w,this.kid2.h=this.h-i}this.kid1.moveKids(),this.kid2.moveKids()}}}